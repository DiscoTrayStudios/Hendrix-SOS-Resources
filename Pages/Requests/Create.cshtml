@page
@using SOSResources.Models
@model HendrixSOSResources.Pages.Requests.CreateModel
@using System.ComponentModel.DataAnnotations
@using System.Reflection

@{
    ViewData["Title"] = "SOS Request Form";
}
<head>
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <script src="~/js/site.js"></script>
    <script>
    document.addEventListener("DOMContentLoaded", function() {
        var resourceSelect = document.getElementById("SelectedType");
    
        const urlParams = new URLSearchParams(window.location.search);
        const selectedType = urlParams.get('SelectedType');
        
        if (selectedType) {
            resourceSelect.value = selectedType;
        }
        });
    </script>
</head>

<body style="text-align: center;">

    <h1 class="fade-in" style="text-align: center; color: #e96b10;">@ViewData["Title"]</h1>

    <p class="fade-in" style="text-align: center;">
        <b>Use the below fields to submit a request for a resource you need.</b>
    </p>

    <form id="resourceSelect" method="get">
    <div class="row" style="display: flex; align-items: center;">
        <div class="col"></div>
        <div class="col fade-in" style="display: flex; margin-bottom: 10px;">
            <p style="white-space: nowrap; margin-right: 20px; padding-top: 2px;">Filter by type:</p>
            <select name="SelectedType" id="SelectedType" style="margin-top: 5px; display: flex;">
                <option value="">All</option>
                @foreach (var type in Enum.GetValues(typeof(SOSResources.Models.ResourceType)))
                {
                    var displayAttr = typeof(SOSResources.Models.ResourceType)
                                       .GetField(type.ToString())
                                       .GetCustomAttributes(typeof(DisplayAttribute), false)
                                       .FirstOrDefault() as DisplayAttribute;
                    
                    var displayName = displayAttr?.Name ?? type.ToString();
                    <option value="@type" selected="@(type.ToString() == Model.SelectedType?.ToString() ? "selected" : "")">
                        @displayName
                    </option>
                }
            </select>
            <button style="margin-left: 10px; display: flex;" type="submit" class="submit-button fade-in">Filter</button>
        </div>
        <div class="col"></div>
        </div>
    </form>
    <form id="resourceForm" method="post">
        <table id="resourceTable" class="table table-striped table-hover fade-in">
            <thead>
                <tr>
                    <th>
                        Resource
                    </th>
                    <th>
                            @Html.DisplayNameFor(model => model.Resources[0].Type)
                    </th>
                    <th>
                        Notes
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Resources[0].Quantity)
                    </th>
                    <th>Select</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.Resources.Count; i++)
                {
                    var item = Model.Resources[i];
                    var typeDisplayAttr = typeof(SOSResources.Models.ResourceType)
                                        .GetField(item.Type.ToString())
                                        .GetCustomAttributes(typeof(DisplayAttribute), false)
                                        .FirstOrDefault() as DisplayAttribute;
                    
                    var typeDisplayName = typeDisplayAttr?.Name ?? item.Type.ToString();
                    <tr id="resourceRow_@item.ID" data-resource-type="@item.Type">
                        <td>@item.Name</td>
                        <td>@typeDisplayName</td>
                        <td>@item.Description</td>
                        <td>@item.Quantity</td>
                        <td>
                            <input type="checkbox" name="Requests[@i].IsSelected" value="true" />
                            <input type="hidden" name="Requests[@i].ResourceId" value="@item.ID" />
                        </td>
                        <td>
                            <input type="text" name="Requests[@i].Reason" placeholder="Reason" class="form-control" />
                            <label style="margin-left: 10px;">
                                <input type="checkbox" name="Requests[@i].NeedWithin24Hours" value="true" />
                                <span style="margin-left: 3px;">Need within 24h</span>
                            </label>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        @{
            var prevDisabled = !Model.Resources.HasPreviousPage ? "disabled" : "";
            var nextDisabled = !Model.Resources.HasNextPage ? "disabled" : "";
        }

        <a asp-page="./Create"
        asp-route-sortOrder="@Model.CurrentSort"
        asp-route-pageIndex="@(Model.Resources.PageIndex + 1)"
        asp-route-currentFilter="@Model.CurrentFilter"
        class="btn btn-primary fade-in @nextDisabled" style="background-color: #e96b10; color: antiquewhite; outline-width: 0px; float: right">
            Next
        </a>
        <a asp-page="./Create"
        asp-route-sortOrder="@Model.CurrentSort"
        asp-route-pageIndex="@(Model.Resources.PageIndex - 1)"
        asp-route-currentFilter="@Model.CurrentFilter"
        class="btn btn-primary fade-in @prevDisabled" style="background-color: #e96b10; color: antiquewhite; outline-width: 0px; float: right">
            Previous
        </a>

        
        <input type="submit" name="submitButton" id="submitButton" value="Submit" class="submit-button fade-in">
    </form>
</body>